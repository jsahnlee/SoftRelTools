#!/bin/sh
#
#  Test out the srt_ntcc.py file
#

CMD="python srt_ntcc.py"

#
# Make sure the compile command works correctly!
#

unset IDE_DUMP
echo
echo Testing that the compile from command line gets invoked
$CMD srt_ntcc_test_source.cpp -c -o srt_ntcc_test_source.o -NTNoRun
echo Now try to actually invoke the guy!
$CMD srt_ntcc_test_source.cpp -c -o srt_ntcc_test_source.o

#
# The next tests will dump out the ide file to make sure things work correctly.
#
IDE_DUMP=junk.txt
export IDE_DUMP
rm -f $IDE_DUMP

#
# Make sure relative paths work correctly
#

echo
echo Testing relative paths -- make sure there are none below!
$CMD -I../CINT junk.cpp -o junk
cat $IDE_DUMP
rm -f $IDE_DUMP

#
# Make sure the program database gets translated correctly
#

echo
echo Testing the program database option -- make sure Fd option is NT path
$CMD -Fd/d0dist/dist/releases/vc50 junk.cpp -o junk
cat $IDE_DUMP
rm -f $IDE_DUMP

#
# Make sure the output file works correctly
#

echo
echo Testing the -o flag
$CMD -o junk.o -c junk.cpp
cat $IDE_DUMP
rm -f $IDE_DUMP
echo  Now do it with link
$CMD -o junk.x junk.cpp
cat $IDE_DUMP
rm -f $IDE_DUMP

#
# Check out the order of things
#

echo 
echo Testing out the order of the thing!
old_dump=$IDE_DUMP
unset IDE_DUMP
$CMD -o junk.x junk.o test.cpp -NTNoRun

#
# Check out that the link and compile cl commands are done right
#

echo Makeing sure the link command is invoked:
$CMD -o junk.x junk.o -NTNoRun

export IDE_DUMP; IDE_DUMP=$old_dump
