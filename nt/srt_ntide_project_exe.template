# Microsoft Developer Studio Project File - Name="${project_name}" - Package Owner=<4>
# Microsoft Developer Studio Generated Build File, Format Version 5.00
# ** DO NOT EDIT **

# TARGTYPE "Win32 (x86) Console Application" 0x0103

CFG=${project_name} - Win32 Debug
!MESSAGE This is not a valid makefile. To build this project using NMAKE,
!MESSAGE use the Export Makefile command and run
!MESSAGE 
!MESSAGE NMAKE /f "${project_name}.mak".
!MESSAGE 
!MESSAGE You can specify a configuration when running NMAKE
!MESSAGE by defining the macro CFG on the command line. For example:
!MESSAGE 
!MESSAGE NMAKE /f "${project_name}.mak" CFG="${project_name} - Win32 Debug"
!MESSAGE 
!MESSAGE Possible choices for configuration are:
!MESSAGE 
!MESSAGE "${project_name} - Win32 Release" (based on\
 "Win32 (x86) Console Application")
!MESSAGE "${project_name} - Win32 Debug" (based on\
 "Win32 (x86) Console Application")
!MESSAGE 

# Begin Project
# PROP Scc_ProjName ""
# PROP Scc_LocalPath ""
CPP=cl.exe
RSC=rc.exe

!IF  "$(CFG)" == "${project_name} - Win32 Release"

# PROP BASE Use_MFC 0
# PROP BASE Use_Debug_Libraries 0
# PROP BASE Output_Dir "${working_dir_release}"
# PROP BASE Intermediate_Dir "${working_dir_release}"
# PROP BASE Target_Dir ""
# PROP Use_MFC 0
# PROP Use_Debug_Libraries 0
# PROP Output_Dir "${working_dir_release}"
# PROP Intermediate_Dir "${working_dir_release}"
# PROP Target_Dir ""
# ADD BASE CPP ${cpp_flags_release}
# ADD CPP /nologo ${cpp_flags_release}
${if has_fortran_files}# ADD BASE F90 ${f_flags_release}
# ADD F90 ${f_flags_release}
${end}# ADD BASE RSC /l 0x409 /d "NDEBUG"
# ADD RSC /l 0x409 /d "NDEBUG"
BSC32=bscmake.exe
# ADD BASE BSC32 /nologo
# ADD BSC32 /nologo
LINK32=link.exe
# ADD BASE LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:console /machine:I386 ${link_search_paths} ${link_libraries} ${link_options}
# ADD LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:console /machine:I386 ${link_search_paths} ${link_libraries} ${link_options}
# Begin Custom Build - Copy executable to proper location
InputPath=.\${working_dir_release}\${target_filename}
InputName=${target_name}
SOURCE=$(InputPath)

"${final_target}" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
	copy $(InputPath) ${final_target}
	${cygwin_path}\bash -c "/bin/chmod a+x ${final_target_unix}"
	if exist $(InputDir)\$(InputName).ilk copy $(InputDir)\$(InputName).ilk ${final_target_dir}
	if exist $(InputDir)\$(InputName).pdb copy $(InputDir)\$(InputName).pdb ${final_target_dir}

# End Custom Build

!ELSEIF  "$(CFG)" == "${project_name} - Win32 Debug"

# PROP BASE Use_MFC 0
# PROP BASE Use_Debug_Libraries 1
# PROP BASE Output_Dir "${working_dir_debug}"
# PROP BASE Intermediate_Dir "${working_dir_debug}"
# PROP BASE Target_Dir ""
# PROP Use_MFC 0
# PROP Use_Debug_Libraries 1
# PROP Output_Dir "${working_dir_debug}"
# PROP Intermediate_Dir "${working_dir_debug}"
# PROP Target_Dir ""
# ADD BASE CPP /nologo ${cpp_flags_debug}
# ADD CPP ${cpp_flags_debug}
${if has_fortran_files}# ADD BASE F90 ${f_flags_debug}
# ADD F90 ${f_flags_debug}
${end}# ADD BASE RSC /l 0x409 /d "_DEBUG"
# ADD RSC /l 0x409 /d "_DEBUG"
BSC32=bscmake.exe
# ADD BASE BSC32 /nologo
# ADD BSC32 /nologo
LINK32=link.exe
# ADD BASE LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:console /debug /machine:I386 /pdbtype:sept ${link_search_paths} ${link_libraries} ${link_options}
# ADD LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:console /debug /machine:I386 /pdbtype:sept ${link_search_paths} ${link_libraries} ${link_options}
# Begin Custom Build - Copy executable to proper location
InputPath=.\${working_dir_debug}\${target_filename}
InputName=${target_name}
SOURCE=$(InputPath)

"${final_target}" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
	copy $(InputPath) ${final_target}
	${cygwin_path}/bash -c "/bin/chmod a+x ${final_target_unix}"
	if exist $(InputDir)\$(InputName).ilk copy $(InputDir)\$(InputName).ilk ${final_target_dir}
	if exist $(InputDir)\$(InputName).pdb copy $(InputDir)\$(InputName).pdb ${final_target_dir}

# End Custom Build

!ENDIF 

# Begin Target

# Name "${project_name} - Win32 Release"
# Name "${project_name} - Win32 Debug"
# Begin Group "Source Files"
# PROP Default_Filter "*.cpp"
${source_file_list}
# End Group

# Begin Group "Header Files"
# PROP Default_Filter "*.h;*.hpp"
${header_file_list}
# End Group

# Begin Group "Compiler Option Files"
# PROP Default_Filter "*.compiler_opt"
${compiler_option_file_list}
# End Group

# Begin Group "Special Command Files"
# PROP Default_Filter "*.bat"
${compiler_special_cmd_file_list}
# End Group

# Begin Group "Library Files"
# PROP Default_Filter "*.lib"
# End Group

# End Target
# End Project
